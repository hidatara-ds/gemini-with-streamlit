version: '3.8'

services:
  # Default service - Enhanced Chat Interface (gpt.py)
  app:
    build: .
    ports:
      - "8501:8501"
    env_file:
      - .env
    volumes:
      - .:/app
    command: streamlit run gpt.py --server.port=8501 --server.address=0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Basic Q&A Application
  qa:
    build: .
    ports:
      - "8502:8501"
    env_file:
      - .env
    volumes:
      - .:/app
    command: streamlit run app.py --server.port=8501 --server.address=0.0.0.0
    restart: unless-stopped

  # Streaming Chat with History
  chat:
    build: .
    ports:
      - "8503:8501"
    env_file:
      - .env
    volumes:
      - .:/app
    command: streamlit run chat.py --server.port=8501 --server.address=0.0.0.0
    restart: unless-stopped

  # Q&A with Chat History
  qachat:
    build: .
    ports:
      - "8504:8501"
    env_file:
      - .env
    volumes:
      - .:/app
    command: streamlit run qachat.py --server.port=8501 --server.address=0.0.0.0
    restart: unless-stopped

  # Image Analysis Application
  vision:
    build: .
    ports:
      - "8505:8501"
    env_file:
      - .env
    volumes:
      - .:/app
    command: streamlit run vision.py --server.port=8501 --server.address=0.0.0.0
    restart: unless-stopped

# Development override
# To use this, run: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
